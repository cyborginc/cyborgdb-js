/**
 * CyborgDB Service
 * REST API for CyborgDB: The Confidential Vector Database
 *
 * The version of the OpenAPI document: 0.12.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';

/**
* Request model for batch similarity search.  Inherits:     IndexOperationRequest: Includes `index_name` and `index_key`.  Attributes:     query_vectors (List[List[float]]): List of vectors to search for in batch mode.     top_k (Optional[int]): Number of nearest neighbors to return for each query. Defaults to 100.     n_probes (Optional[int]): Number of lists to probe during the query. Defaults to auto.     greedy (Optional[bool]): Whether to use greedy search. Defaults to False.     filters (Optional[Dict[str, Any]]): JSON-like dictionary specifying metadata filters. Defaults to {}.     include (List[str]): List of additional fields to include in the response. Defaults to `[\"distance\", \"metadata\"]`.
*/
export class BatchQueryRequest {
    /**
    * 32-byte encryption key as hex string
    */
    'indexKey': string;
    /**
    * ID name
    */
    'indexName': string;
    'queryVectors': Array<Array<number>>;
    'topK'?: number | null;
    'nProbes'?: number | null;
    'greedy'?: boolean | null;
    'filters'?: { [key: string]: any; } | null;
    'include'?: Array<string>;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "indexKey",
            "baseName": "index_key",
            "type": "string"
        },
        {
            "name": "indexName",
            "baseName": "index_name",
            "type": "string"
        },
        {
            "name": "queryVectors",
            "baseName": "query_vectors",
            "type": "Array<Array<number>>"
        },
        {
            "name": "topK",
            "baseName": "top_k",
            "type": "number"
        },
        {
            "name": "nProbes",
            "baseName": "n_probes",
            "type": "number"
        },
        {
            "name": "greedy",
            "baseName": "greedy",
            "type": "boolean"
        },
        {
            "name": "filters",
            "baseName": "filters",
            "type": "{ [key: string]: any; }"
        },
        {
            "name": "include",
            "baseName": "include",
            "type": "Array<string>"
        }    ];

    static getAttributeTypeMap() {
        return BatchQueryRequest.attributeTypeMap;
    }
}

