/* tslint:disable */
/* eslint-disable */
/**
 * CyborgDB Service
 * REST API for CyborgDB: The Confidential Vector Database
 *
 * The version of the OpenAPI document: 0.12.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Represents a single result from a similarity search.
 * 
 * Attributes:
 *     id (str): The identifier of the retrieved item.
 *     distance (Optional[float]): Distance from the query vector (smaller = more similar).
 *     metadata (Optional[Dict[str, Any]]): Additional metadata for the result.
 *     vector (Optional[List[float]]): The retrieved vector (if included in response).
 * @export
 * @interface QueryResultItem
 */
export interface QueryResultItem {
    /**
     * 
     * @type {string}
     * @memberof QueryResultItem
     */
    id: string;
    /**
     * 
     * @type {number}
     * @memberof QueryResultItem
     */
    distance?: number | null;
    /**
     * 
     * @type {{ [key: string]: any; }}
     * @memberof QueryResultItem
     */
    metadata?: { [key: string]: any; } | null;
    /**
     * 
     * @type {Array<number>}
     * @memberof QueryResultItem
     */
    vector?: Array<number> | null;
}

/**
 * Check if a given object implements the QueryResultItem interface.
 */
export function instanceOfQueryResultItem(value: object): value is QueryResultItem {
    if (!('id' in value) || value['id'] === undefined) return false;
    return true;
}

export function QueryResultItemFromJSON(json: any): QueryResultItem {
    return QueryResultItemFromJSONTyped(json, false);
}

export function QueryResultItemFromJSONTyped(json: any, ignoreDiscriminator: boolean): QueryResultItem {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'distance': json['distance'] == null ? undefined : json['distance'],
        'metadata': json['metadata'] == null ? undefined : json['metadata'],
        'vector': json['vector'] == null ? undefined : json['vector'],
    };
}

export function QueryResultItemToJSON(json: any): QueryResultItem {
    return QueryResultItemToJSONTyped(json, false);
}

export function QueryResultItemToJSONTyped(value?: QueryResultItem | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'distance': value['distance'],
        'metadata': value['metadata'],
        'vector': value['vector'],
    };
}

