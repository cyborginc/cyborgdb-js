/* tslint:disable */
/* eslint-disable */
/**
 * CyborgDB Service
 * REST API for CyborgDB: The Confidential Vector Database
 *
 * The version of the OpenAPI document: 0.12.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { IndexIVFPQModel } from './IndexIVFPQModel';
import {
    IndexIVFPQModelFromJSON,
    IndexIVFPQModelFromJSONTyped,
    IndexIVFPQModelToJSON,
    IndexIVFPQModelToJSONTyped,
} from './IndexIVFPQModel';
import type { IndexIVFModel } from './IndexIVFModel';
import {
    IndexIVFModelFromJSON,
    IndexIVFModelFromJSONTyped,
    IndexIVFModelToJSON,
    IndexIVFModelToJSONTyped,
} from './IndexIVFModel';
import type { IndexIVFFlatModel } from './IndexIVFFlatModel';
import {
    IndexIVFFlatModelFromJSON,
    IndexIVFFlatModelFromJSONTyped,
    IndexIVFFlatModelToJSON,
    IndexIVFFlatModelToJSONTyped,
} from './IndexIVFFlatModel';

/**
 * 
 * @export
 * @interface IndexConfig
 */
export interface IndexConfig {
    /**
     * 
     * @type {number}
     * @memberof IndexConfig
     */
    dimension?: number;
    /**
     * 
     * @type {string}
     * @memberof IndexConfig
     */
    type?: string;
    /**
     * 
     * @type {number}
     * @memberof IndexConfig
     */
    pqDim: number;
    /**
     * 
     * @type {number}
     * @memberof IndexConfig
     */
    pqBits: number;
}

/**
 * Check if a given object implements the IndexConfig interface.
 */
export function instanceOfIndexConfig(value: object): value is IndexConfig {
    if (!('pqDim' in value) || value['pqDim'] === undefined) return false;
    if (!('pqBits' in value) || value['pqBits'] === undefined) return false;
    return true;
}

export function IndexConfigFromJSON(json: any): IndexConfig {
    return IndexConfigFromJSONTyped(json, false);
}

export function IndexConfigFromJSONTyped(json: any, ignoreDiscriminator: boolean): IndexConfig {
    if (json == null) {
        return json;
    }
    return {
        
        'dimension': json['dimension'] == null ? undefined : json['dimension'],
        'type': json['type'] == null ? undefined : json['type'],
        'pqDim': json['pq_dim'],
        'pqBits': json['pq_bits'],
    };
}

export function IndexConfigToJSON(json: any): IndexConfig {
    return IndexConfigToJSONTyped(json, false);
}

export function IndexConfigToJSONTyped(value?: IndexConfig | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'dimension': value['dimension'],
        'type': value['type'],
        'pq_dim': value['pqDim'],
        'pq_bits': value['pqBits'],
    };
}

