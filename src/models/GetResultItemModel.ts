/* tslint:disable */
/* eslint-disable */
/**
 * CyborgDB Service
 * REST API for CyborgDB: The Confidential Vector Database
 *
 * The version of the OpenAPI document: 0.12.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Represents an individual item retrieved from the encrypted index.
 * 
 * Attributes:
 *     id (str): The unique identifier of the item.
 *     metadata (Optional[Dict[str, Any]]): Additional metadata associated with the item.
 *     contents (Optional[bytes]): The raw byte contents of the item.
 *     vector (Optional[List[float]]): The vector representation of the item.
 * @export
 * @interface GetResultItemModel
 */
export interface GetResultItemModel {
    /**
     * 
     * @type {string}
     * @memberof GetResultItemModel
     */
    id: string;
    /**
     * 
     * @type {{ [key: string]: any; }}
     * @memberof GetResultItemModel
     */
    metadata?: { [key: string]: any; } | null;
    /**
     * 
     * @type {Blob}
     * @memberof GetResultItemModel
     */
    contents?: Blob | null;
    /**
     * 
     * @type {Array<number>}
     * @memberof GetResultItemModel
     */
    vector?: Array<number> | null;
}

/**
 * Check if a given object implements the GetResultItemModel interface.
 */
export function instanceOfGetResultItemModel(value: object): value is GetResultItemModel {
    if (!('id' in value) || value['id'] === undefined) return false;
    return true;
}

export function GetResultItemModelFromJSON(json: any): GetResultItemModel {
    return GetResultItemModelFromJSONTyped(json, false);
}

export function GetResultItemModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetResultItemModel {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'metadata': json['metadata'] == null ? undefined : json['metadata'],
        'contents': json['contents'] == null ? undefined : json['contents'],
        'vector': json['vector'] == null ? undefined : json['vector'],
    };
}

export function GetResultItemModelToJSON(json: any): GetResultItemModel {
    return GetResultItemModelToJSONTyped(json, false);
}

export function GetResultItemModelToJSONTyped(value?: GetResultItemModel | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'metadata': value['metadata'],
        'contents': value['contents'],
        'vector': value['vector'],
    };
}

